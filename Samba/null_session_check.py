import subprocess
import shlex
import argparse

def check_login(ip, debug_mode):

    cmd = "rpcclient -U \"\" %s" % ip
    proc = subprocess.Popen(shlex.split(cmd), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    proc.stdin.write('\n')
    stdout, stderr = proc.communicate()

    if 'Error was NT_STATUS_' in stdout:
        print "%s: Not Vulnerable => Cannot logged in as anonymous user" % ip
        if debug_mode: print "--- log start ---\n%s\n--- log end ---\n" % stdout
        return False

    return True

def check_command(ip, debug_mode):

    cmd = "rpcclient -U \"\" %s" % ip
    proc = subprocess.Popen(shlex.split(cmd), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    proc.stdin.write('\n')
    proc.stdin.write('enumdomusers\n')
    stdout, stderr = proc.communicate()

    error_msg = ['Error was NT_STATUS_', 'NT_STATUS_ACCESS_DENIED', 'error: NT_STATUS_']
    Vulnerable = True
    for msg in error_msg:
        if msg in stdout or msg in stderr:
            Vulnerable = False
            break

    if Vulnerable:
        print "%s: Vulnerable" % ip
    else:
        print "%s: Not Vulnerable => anonymous login successful, but cannot enumerate user data" % ip

    if debug_mode: print "--- log start ---\n%s\n--- log end ---\n" % stdout

def main(fname, debug_mode):

    for ip in open(fname):
        ip = ip.strip()
        if check_login(ip, debug_mode):
            check_command(ip, debug_mode)

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='null session checker')
    parser.add_argument('filename', help='ip list')
    parser.add_argument('-d', '--debug', help='debug only, print stdout for check', action='store_true')

    args = parser.parse_args()
    main(args.filename, args.debug)
